name: Deploy to Azure VM

env:
  DOTNET_VERSION: '8'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build rubberduckvba.Server/rubberduckvba.Server.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish -t rubberduckvba.Server/rubberduckvba.Server.csproj -c Release -o ${{env.DOTNET_ROOT}}/pub

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/pub

  deploy:
    permissions:
      contents: none
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      - name: Deploy to IIS
        id: deploy-to-iis
        uses: ChristopheLav/iis-deploy@v1
        with:
          website-name: 'api'
          msdeploy-service-url: ${{ secrets.MSDEPLOY_URL }}
          msdeploy-username: ${{ secrets.MSDEPLOY_USERNAME }}
          msdeploy-password: ${{ secrets.MSDEPLOY_PASSWORD }}
          source-path: ${{ github.workspace }}\website\publish
