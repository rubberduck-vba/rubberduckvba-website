using System.Collections.Generic;
using Rubberduck.Parsing.Grammar;

namespace RubberduckServices.Parsing
{
    internal static partial class TokenKinds
    {
        public static HashSet<int> StringLiterals { get; } = new HashSet<int>
        {
            VBAParser.STRINGLITERAL,
            VBAParser.DATELITERAL,
        };

        public static HashSet<int> Keywords { get; } = new HashSet<int>
        {
            VBAParser.ANY,
            VBAParser.CURRENCY,
            VBAParser.DEBUG,
            VBAParser.DOEVENTS,
            VBAParser.EXIT,
            VBAParser.FIX,
            VBAParser.INPUTB,
            VBAParser.LBOUND,
            VBAParser.LONGLONG,
            VBAParser.LONGPTR,
            VBAParser.OPTION,
            VBAParser.PSET,
            VBAParser.SCALE,
            VBAParser.SGN,
            VBAParser.UBOUND,
            VBAParser.ACCESS,
            VBAParser.ADDRESSOF,
            VBAParser.ALIAS,
            VBAParser.AND,
            VBAParser.ATTRIBUTE,
            VBAParser.APPEND,
            VBAParser.AS,
            VBAParser.BEGINPROPERTY,
            VBAParser.BEGIN,
            VBAParser.BINARY,
            VBAParser.BOOLEAN,
            VBAParser.BYVAL,
            VBAParser.BYREF,
            VBAParser.BYTE,
            VBAParser.CALL,
            VBAParser.CASE,
            VBAParser.CDECL,
            VBAParser.CLASS,
            VBAParser.CLOSE,
            VBAParser.CONST,
            VBAParser.CONST,
            VBAParser.DATABASE,
            VBAParser.DATE,
            VBAParser.DECLARE,
            VBAParser.DEFBOOL,
            VBAParser.DEFBYTE,
            VBAParser.DEFDATE,
            VBAParser.DEFDBL,
            VBAParser.DEFCUR,
            VBAParser.DEFINT,
            VBAParser.DEFLNG,
            VBAParser.DEFLNGLNG,
            VBAParser.DEFLNGPTR,
            VBAParser.DEFOBJ,
            VBAParser.DEFSNG,
            VBAParser.DEFSTR,
            VBAParser.DEFVAR,
            VBAParser.DIM,
            VBAParser.DO,
            VBAParser.DOUBLE,
            VBAParser.EACH,
            VBAParser.ELSE,
            VBAParser.ELSEIF,
            VBAParser.EMPTY,
            VBAParser.END_ENUM,
            VBAParser.END_FUNCTION,
            VBAParser.END_IF,
            VBAParser.ENDPROPERTY,
            VBAParser.END_SELECT,
            VBAParser.END_SUB,
            VBAParser.END_TYPE,
            VBAParser.END_WITH,
            VBAParser.END,
            VBAParser.ENUM,
            VBAParser.EQV,
            VBAParser.ERASE,
            VBAParser.ERROR,
            VBAParser.EVENT,
            VBAParser.EXIT_DO,
            VBAParser.EXIT_FOR,
            VBAParser.EXIT_FUNCTION,
            VBAParser.EXIT_PROPERTY,
            VBAParser.EXIT_SUB,
            VBAParser.FALSE,
            VBAParser.FRIEND,
            VBAParser.FOR,
            VBAParser.FUNCTION,
            VBAParser.GET,
            VBAParser.GLOBAL,
            VBAParser.GOSUB,
            VBAParser.GOTO,
            VBAParser.IF,
            VBAParser.IMP,
            VBAParser.IMPLEMENTS,
            VBAParser.IN,
            VBAParser.INPUT,
            VBAParser.IS,
            VBAParser.INTEGER,
            VBAParser.LOCK,
            VBAParser.LONG,
            VBAParser.LOOP,
            VBAParser.LET,
            VBAParser.LIB,
            VBAParser.LIKE,
            VBAParser.LINE_INPUT,
            VBAParser.LOCK_READ,
            VBAParser.LOCK_WRITE,
            VBAParser.LOCK_READ_WRITE,
            VBAParser.LSET,
            VBAParser.MOD,
            VBAParser.NAME,
            VBAParser.NEXT,
            VBAParser.NEW,
            VBAParser.NOT,
            VBAParser.NOTHING,
            VBAParser.NULL,
            VBAParser.OBJECT,
            VBAParser.ON_ERROR,
            VBAParser.ON_LOCAL_ERROR,
            VBAParser.OPEN,
            VBAParser.OPTIONAL,
            VBAParser.OPTION_BASE,
            VBAParser.OPTION_EXPLICIT,
            VBAParser.OPTION_COMPARE,
            VBAParser.OPTION_PRIVATE_MODULE,
            VBAParser.OR,
            VBAParser.OUTPUT,
            VBAParser.PARAMARRAY,
            VBAParser.PRESERVE,
            VBAParser.PRINT,
            VBAParser.PRIVATE,
            VBAParser.PROPERTY_GET,
            VBAParser.PROPERTY_LET,
            VBAParser.PROPERTY_SET,
            VBAParser.PTRSAFE,
            VBAParser.PUBLIC,
            VBAParser.PUT,
            VBAParser.RANDOM,
            VBAParser.RANDOMIZE,
            VBAParser.RAISEEVENT,
            VBAParser.READ,
            VBAParser.READ_WRITE,
            VBAParser.REDIM,
            VBAParser.REM,
            VBAParser.RESET,
            VBAParser.RESUME,
            VBAParser.RETURN,
            VBAParser.RSET,
            VBAParser.SEEK,
            VBAParser.SELECT,
            VBAParser.SET,
            VBAParser.SHARED,
            VBAParser.SINGLE,
            VBAParser.STATIC,
            VBAParser.STEP,
            VBAParser.STOP,
            VBAParser.STRING,
            VBAParser.SUB,
            VBAParser.TAB,
            VBAParser.TEXT,
            VBAParser.THEN,
            VBAParser.TO,
            VBAParser.TRUE,
            VBAParser.TYPE,
            VBAParser.TYPEOF,
            VBAParser.UNLOCK,
            VBAParser.UNTIL,
            VBAParser.VARIANT,
            VBAParser.VERSION,
            VBAParser.WEND,
            VBAParser.WHILE,
            VBAParser.WITH,
            VBAParser.WITHEVENTS,
            VBAParser.WRITE,
            VBAParser.XOR
        };
    }
}
